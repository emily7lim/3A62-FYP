"""init

Revision ID: 4160e0a080e3
Revises: 
Create Date: 2021-12-31 15:44:53.250542

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4160e0a080e3'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gfInsuranceMainCashPlans',
    sa.Column('insurance_main_cash_plans_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('main_plan_id', sa.String(length=100), nullable=False),
    sa.Column('dateCreated', sa.String(length=100), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('currentValue', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('nonGuaranteeAmt', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('loanAmt', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('loanInterest', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('insurance_main_cash_plans_id', name=op.f('pk_gfInsuranceMainCashPlans'))
    )
    op.create_table('gfInsuranceMainPlans',
    sa.Column('insurance_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('mongodb_id', sa.String(length=50), nullable=False),
    sa.Column('user_policy_holder_id', sa.String(length=50), nullable=False),
    sa.Column('dateCreated', sa.String(length=100), nullable=True),
    sa.Column('policyHolder', sa.String(length=255), nullable=True),
    sa.Column('lifeAssured', sa.String(length=255), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('dob', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('productName', sa.String(length=100), nullable=True),
    sa.Column('insurer', sa.String(length=100), nullable=True),
    sa.Column('policyNum', sa.String(length=100), nullable=True),
    sa.Column('coverageTerm', sa.String(length=100), nullable=True),
    sa.Column('policyType', sa.String(length=255), nullable=True),
    sa.Column('dateIncepted', sa.String(length=100), nullable=True),
    sa.Column('dateMatured', sa.String(length=100), nullable=True),
    sa.Column('datePaymentMatured', sa.String(length=100), nullable=True),
    sa.Column('nominationNominee', sa.String(length=255), nullable=True),
    sa.Column('nominationStatus', sa.String(length=100), nullable=True),
    sa.Column('paymentFrequency', sa.String(length=100), nullable=True),
    sa.Column('paymentTerm', sa.String(length=100), nullable=True),
    sa.Column('paymentMode', sa.String(length=255), nullable=True),
    sa.Column('paymentAmt', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('hsDeductible', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('hsCoInsured', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('hsYearlyLimit', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giTravelMedicalOverseas', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giTravelPersonalAccident', sa.String(length=50), nullable=True),
    sa.Column('giTravelRegion', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giHomeFixtures', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giHomeContents', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giMotorProperty', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giMotorPerson', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giMotorWorkshop', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('giMotorNcd', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('LongTermCare', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('death', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('totalPermDisability', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('disabilityIncome', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('earlyCriticalIllness', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('criticalIllness', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('personalAccident', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('hospitalizationBenefits', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('insurance_id', name=op.f('pk_gfInsuranceMainPlans')),
    sa.UniqueConstraint('mongodb_id', name=op.f('uq_gfInsuranceMainPlans_mongodb_id'))
    )
    op.create_table('gfInsuranceMainPlansPayout',
    sa.Column('insurance_main_plans_payout', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('main_plan_id', sa.String(length=100), nullable=False),
    sa.Column('startDate', sa.String(length=100), nullable=True),
    sa.Column('endDate', sa.String(length=100), nullable=True),
    sa.Column('paymentFrequency', sa.String(length=100), nullable=True),
    sa.Column('nonGuaranteeAmt', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('guaranteeAmt', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('insurance_main_plans_payout', name=op.f('pk_gfInsuranceMainPlansPayout'))
    )
    op.create_table('gfInsuranceMainPlansPremiumSchedule',
    sa.Column('insurance_main_plans_premium_schedule_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('main_plan_id', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('date', sa.String(length=50), nullable=True),
    sa.Column('premiums', sa.String(length=100), nullable=True),
    sa.Column('paymentMode', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('insurance_main_plans_premium_schedule_id', name=op.f('pk_gfInsuranceMainPlansPremiumSchedule'))
    )
    op.create_table('gfInsuranceRiders',
    sa.Column('insurance_riders_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('mongodb_riders_id', sa.String(length=100), nullable=False),
    sa.Column('main_plan_id', sa.String(length=100), nullable=True),
    sa.Column('ageOfEntry', sa.Integer(), nullable=True),
    sa.Column('productName', sa.String(length=255), nullable=True),
    sa.Column('insurer', sa.String(length=100), nullable=True),
    sa.Column('policyNum', sa.String(length=100), nullable=True),
    sa.Column('coverageTerm', sa.String(length=100), nullable=True),
    sa.Column('dateIncepted', sa.String(length=100), nullable=True),
    sa.Column('dateMatured', sa.String(length=100), nullable=True),
    sa.Column('paymentFrequency', sa.String(length=100), nullable=True),
    sa.Column('paymentTerm', sa.String(length=100), nullable=True),
    sa.Column('paymentMode', sa.String(length=100), nullable=True),
    sa.Column('paymentAmt', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('longTermCare', sa.String(length=100), nullable=True),
    sa.Column('death', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('totalPremDisability', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('disabilityIncome', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('earlyCriticalIllness', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('criticalIllness', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('personalAccident', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('hospitalizationBenefits', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('insurance_riders_id', name=op.f('pk_gfInsuranceRiders')),
    sa.UniqueConstraint('mongodb_riders_id', name=op.f('uq_gfInsuranceRiders_mongodb_riders_id'))
    )
    op.create_table('gfInsuranceRidersPremiumSchedule',
    sa.Column('insurance_riders_premium_schedule_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('main_plan_id', sa.String(length=100), nullable=False),
    sa.Column('rider_id', sa.String(length=100), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('month', sa.Integer(), nullable=True),
    sa.Column('date', sa.String(length=50), nullable=True),
    sa.Column('premiums', sa.String(length=100), nullable=True),
    sa.Column('paymentMode', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('insurance_riders_premium_schedule_id', name=op.f('pk_gfInsuranceRidersPremiumSchedule'))
    )
    op.create_table('gfUser',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('mongodb_id', sa.String(length=100), nullable=False),
    sa.Column('fullName', sa.String(length=255), nullable=True),
    sa.Column('prefName', sa.String(length=255), nullable=True),
    sa.Column('nationality', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('residenceAddress', sa.Text(), nullable=True),
    sa.Column('residenceCity', sa.String(length=100), nullable=True),
    sa.Column('residenceState', sa.String(length=100), nullable=True),
    sa.Column('residenceCountry', sa.String(length=100), nullable=True),
    sa.Column('residenceZip', sa.Integer(), nullable=True),
    sa.Column('citizenship', sa.String(length=100), nullable=True),
    sa.Column('nationalStatus', sa.String(length=100), nullable=True),
    sa.Column('company', sa.String(length=100), nullable=True),
    sa.Column('designation', sa.String(length=100), nullable=True),
    sa.Column('workPhone', sa.String(length=100), nullable=True),
    sa.Column('workEmail', sa.String(length=100), nullable=True),
    sa.Column('workAddress', sa.Text(), nullable=True),
    sa.Column('workCity', sa.String(length=100), nullable=True),
    sa.Column('workState', sa.String(length=100), nullable=True),
    sa.Column('workCountry', sa.String(length=100), nullable=True),
    sa.Column('workZip', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('user_id', name=op.f('pk_gfUser')),
    sa.UniqueConstraint('fullName', name=op.f('uq_gfUser_fullName')),
    sa.UniqueConstraint('mongodb_id', name=op.f('uq_gfUser_mongodb_id'))
    )
    op.create_table('kycCollectionTable',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('emailUser', sa.String(length=100), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('userReply', sa.Text(), nullable=False),
    sa.Column('questionFieldName', sa.String(length=100), nullable=False),
    sa.Column('date_updated', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kycCollectionTable'))
    )
    op.drop_table('gfinsurancemainplans')
    op.drop_table('kyccollectiontable')
    op.drop_table('gfuser')
    op.drop_table('gfinsurancemainplanspayout')
    op.drop_table('gfinsuranceriders')
    op.drop_table('gfinsurancemaincashplans')
    op.drop_table('gfinsuranceriderspremiumschedule')
    op.drop_table('gfinsurancemainplanspremiumschedule')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('gfinsurancemainplanspremiumschedule',
    sa.Column('insurance_main_plans_premium_schedule_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('main_plan_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('month', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('premiums', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentmode', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_plan_id'], ['gfinsurancemainplans.mongodb_id'], name='gfinsurancemainplanspremiumschedule_main_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('insurance_main_plans_premium_schedule_id', name='gfinsurancemainplanspremiumschedule_pkey')
    )
    op.create_table('gfinsuranceriderspremiumschedule',
    sa.Column('insurance_riders_premium_schedule_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('rider_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('main_plan_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('month', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('premiums', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentmode', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_plan_id'], ['gfinsurancemainplans.mongodb_id'], name='gfinsuranceriderspremiumschedule_main_plan_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rider_id'], ['gfinsuranceriders.mongodb_rider_id'], name='gfinsuranceriderspremiumschedule_rider_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('insurance_riders_premium_schedule_id', name='gfinsuranceriderspremiumschedule_pkey')
    )
    op.create_table('gfinsurancemaincashplans',
    sa.Column('insurance_main_cash_plans_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('main_plan_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('datecreated', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('currentvalue', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('nonguaranteeamt', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('loanamt', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('loaninterest', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_plan_id'], ['gfinsurancemainplans.mongodb_id'], name='gfinsurancemaincashplans_main_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('insurance_main_cash_plans_id', name='gfinsurancemaincashplans_pkey')
    )
    op.create_table('gfinsuranceriders',
    sa.Column('insurance_riders_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('mongodb_rider_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('main_plan_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('ageofentry', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('productname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('insurer', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('policynum', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('coverageterm', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('dateincepted', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('datematured', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentfrequency', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentterm', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentmode', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentamt', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('longtermcare', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('death', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('totalpermdisability', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('disabilityincome', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('earlycriticalillness', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('criticalillness', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('personalaccident', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('hospitalizationbenefits', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('remarks', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_plan_id'], ['gfinsurancemainplans.mongodb_id'], name='gfinsuranceriders_main_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('insurance_riders_id', name='gfinsuranceriders_pkey'),
    sa.UniqueConstraint('mongodb_rider_id', name='gfinsuranceriders_mongodb_rider_id_key')
    )
    op.create_table('gfinsurancemainplanspayout',
    sa.Column('insurance_main_plans_payout', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('main_plan_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('startdate', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('enddate', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentfrequency', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('nonguaranteeamt', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('guaranteeamt', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['main_plan_id'], ['gfinsurancemainplans.mongodb_id'], name='gfinsurancemainplanspayout_main_plan_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('insurance_main_plans_payout', name='gfinsurancemainplanspayout_pkey')
    )
    op.create_table('gfuser',
    sa.Column('user_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('mongodb_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('fullname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('prefname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('nationality', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('residenceaddress', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('residencecity', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('residencestate', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('residencecountry', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('residencezip', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('citizenship', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('nationalstatus', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('company', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('designation', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('workphone', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('workemail', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('workaddress', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('workcity', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('workstate', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('workcountry', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('workzip', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='gfuser_pkey'),
    sa.UniqueConstraint('fullname', name='gfuser_fullname_key'),
    sa.UniqueConstraint('mongodb_id', name='gfuser_mongodb_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('kyccollectiontable',
    sa.Column('kyc_collection_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('useremail', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('question', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('userreply', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.Column('questionfieldname', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('dateupdated', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('kyc_collection_id', name='kyccollectiontable_pkey')
    )
    op.create_table('gfinsurancemainplans',
    sa.Column('insurance_id', postgresql.UUID(), server_default=sa.text('uuid_generate_v1()'), autoincrement=False, nullable=False),
    sa.Column('mongodb_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('datecreated', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('policyholder', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('lifeassured', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('dob', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('productname', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('insurer', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('policynum', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('coverageterm', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('policytype', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('dateincepted', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('datematured', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('datepaymentmatured', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('nominationnominee', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('nominationstatus', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentfrequency', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentterm', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('paymentmode', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('paymentamt', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('hsdeductible', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('hscoinsured', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('hsyearlylimit', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gitravelmedicaloverseas', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gitravelpersonalaccident', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gitravelregion', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gihomefixtures', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gihomecontents', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gimotorproperty', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gimotorperson', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gimotorworkshop', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('gimotorncd', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('longtermcare', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('death', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('totalpermdisability', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('disabilityincome', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('earlycriticalillness', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('criticalillness', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('personalaccident', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('hospitalizationbenefits', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('remarks', postgresql.ARRAY(sa.TEXT()), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lifeassured'], ['gfuser.fullname'], name='gfinsurancemainplans_lifeassured_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['policyholder'], ['gfuser.fullname'], name='gfinsurancemainplans_policyholder_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('insurance_id', name='gfinsurancemainplans_pkey'),
    sa.UniqueConstraint('mongodb_id', name='gfinsurancemainplans_mongodb_id_key')
    )
    op.drop_table('kycCollectionTable')
    op.drop_table('gfUser')
    op.drop_table('gfInsuranceRidersPremiumSchedule')
    op.drop_table('gfInsuranceRiders')
    op.drop_table('gfInsuranceMainPlansPremiumSchedule')
    op.drop_table('gfInsuranceMainPlansPayout')
    op.drop_table('gfInsuranceMainPlans')
    op.drop_table('gfInsuranceMainCashPlans')
    # ### end Alembic commands ###
